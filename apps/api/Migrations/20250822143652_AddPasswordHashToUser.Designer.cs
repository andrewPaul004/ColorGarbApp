// <auto-generated />
using System;
using ColorGarbApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ColorGarbApi.Migrations
{
    [DbContext(typeof(ColorGarbDbContext))]
    [Migration("20250822143652_AddPasswordHashToUser")]
    partial class AddPasswordHashToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColorGarbApi.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CurrentShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OriginalShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTime(2025, 8, 22, 14, 36, 51, 151, DateTimeKind.Utc).AddTicks(3117),
                            CurrentShipDate = new DateTime(2025, 11, 20, 14, 36, 51, 151, DateTimeKind.Utc).AddTicks(2363),
                            CurrentStage = "Initial Consultation",
                            Description = "Spring Musical - Hamilton Costumes (15 performers)",
                            IsActive = true,
                            Notes = "Historical accuracy important. Male and female period costumes needed.",
                            OrderNumber = "CG-2025-001",
                            OrganizationId = new Guid("11111111-1111-1111-1111-111111111111"),
                            OriginalShipDate = new DateTime(2025, 11, 20, 14, 36, 51, 151, DateTimeKind.Utc).AddTicks(1975),
                            PaymentStatus = "Pending",
                            TotalAmount = 7500.00m,
                            UpdatedAt = new DateTime(2025, 8, 22, 14, 36, 51, 151, DateTimeKind.Utc).AddTicks(3232)
                        });
                });

            modelBuilder.Entity("ColorGarbApi.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactEmail")
                        .IsUnique();

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Address = "123 School St, Lincoln, IL 62656",
                            ContactEmail = "drama@lincolnhigh.edu",
                            ContactPhone = "(555) 123-4567",
                            CreatedAt = new DateTime(2025, 8, 22, 14, 36, 51, 149, DateTimeKind.Utc).AddTicks(156),
                            IsActive = true,
                            Name = "Lincoln High School Drama Department",
                            Type = "school",
                            UpdatedAt = new DateTime(2025, 8, 22, 14, 36, 51, 149, DateTimeKind.Utc).AddTicks(684)
                        });
                });

            modelBuilder.Entity("ColorGarbApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 8, 22, 14, 36, 51, 150, DateTimeKind.Utc).AddTicks(9222),
                            Email = "director@lincolnhigh.edu",
                            IsActive = true,
                            Name = "Jane Smith",
                            OrganizationId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PasswordHash = "",
                            Phone = "(555) 123-4567",
                            Role = "client",
                            UpdatedAt = new DateTime(2025, 8, 22, 14, 36, 51, 150, DateTimeKind.Utc).AddTicks(9362)
                        });
                });

            modelBuilder.Entity("ColorGarbApi.Models.Order", b =>
                {
                    b.HasOne("ColorGarbApi.Models.Organization", "Organization")
                        .WithMany("Orders")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ColorGarbApi.Models.User", b =>
                {
                    b.HasOne("ColorGarbApi.Models.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ColorGarbApi.Models.Organization", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
